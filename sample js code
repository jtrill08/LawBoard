function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
  }

// Fetch data from Google Sheet

// Replace YOUR_API_KEY with your actual API key
const API_KEY = "AIzaSyDP84vegl-duWUlZbczls3BzV0bSzcVSYE";

// Replace SPREADSHEET_ID with the actual ID of the sheet
const SPREADSHEET_ID = "112NNivJwNKemao_GE8oqNnTe3bTH93pnIuAZmCKoGPg";





fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/Sheet1?key=${API_KEY}`)
    .then(response => response.json())
    .then(data => {
        // Get the template
        const template = document.querySelector("#job-listing-template");
        const jobsContainer = document.querySelector("#upcoming");


        // Create an object to store the jobs by date
        const jobsByDate = {};

        // Loop through the data starting from the second row (index 1)
        for (let i = 1; i < data.values.length; i++) {
            const job = data.values[i];
            // Get the deadline in a format we can use as a key
            const deadline = new Date(job[2]).toDateString();

            // Create an array for the jobs on this date if it doesn't exist yet
            if (!jobsByDate[deadline]) {
                jobsByDate[deadline] = [];
            }
            // Add the job to the array
            jobsByDate[deadline].push(job);
        }

        // Loop through the jobs by date
        for (const date in jobsByDate) {
            // Create a new node for the date header
            const dateNode = document.createElement("h2");
            dateNode.innerText = date;
            jobsContainer.appendChild(dateNode);

            // Loop through the jobs on this date
            for (const job of jobsByDate[date]) {
                // Clone the template
                const jobNode = template.content.cloneNode(true);

                // Fill in the template
                jobNode.querySelector(".job-company").innerText = job[0];
                jobNode.querySelector(".job-description").innerText = job[1];
                jobNode.querySelector(".job-deadline").innerText = job[2];
                jobNode.querySelector(".job-apply a").href = job[3];

                // Append the job to the container
                jobsContainer.appendChild(jobNode);
            }
        }
    })
    .catch(error => console.log(error));

//search//
function searchJobs() {
    let searchValue = document.getElementById("searchInput").value.toLowerCase();
    let jobListings = document.getElementsByClassName("job-listing");
    for (let i = 0; i < jobListings.length; i++) {
        let jobCompany = jobListings[i].getElementsByClassName("job-company")[0].innerHTML.toLowerCase();
        let jobDeadline = jobListings[i].getElementsByClassName("job-deadline")[0].innerHTML.toLowerCase();
        let jobDescription = jobListings[i].getElementsByClassName("job-description")[0].innerHTML.toLowerCase();
        if (jobCompany.includes(searchValue) || jobDeadline.includes(searchValue) || jobDescription.includes(searchValue)) {
            jobListings[i].style.display = "block";
        } else {
            jobListings[i].style.display = "none";
        }
    }
}

//notifications//
// function to store data in Local Storage
function storeData(key, data) {
    localStorage.setItem(key, JSON.stringify(data));
}

// function to retrieve data from Local Storage
function getData(key) {
    return JSON.parse(localStorage.getItem(key));
}

// function to display data in notifications container
function displayData() {
    const notificationsContainer = document.querySelector(".notifications-container");
    const storedData = getData("notifications");
    if (storedData) {
        storedData.forEach(data => {
            // create the notification node
            const notificationNode = document.createElement("div");
            notificationNode.classList.add("notification");
            notificationNode.innerHTML = `<div class="notification-job-company">${data.jobCompany}</div>
                                          <div class="notification-job-deadline">${data.jobDeadline}</div>
                                          <div class="notification-job-description">${data.jobDescription}</div>`;

            // add the notification to the container
            notificationsContainer.appendChild(notificationNode);
        });
    }
}

// retrieve data from Local Storage when the page loads
window.addEventListener("load", () => {
    // check if there is data in Local Storage
    if(localStorage.getItem("notifications")) {
        // get the data from Local Storage
        let notifications = JSON.parse(localStorage.getItem("notifications"));
        // loop through the data
        notifications.forEach((notification, index) => {
            // create the notification node
            const notificationNode = document.createElement("div");
            notificationNode.classList.add("notification");
            notificationNode.innerHTML = `<div class="notification-job-company">${notification.jobCompany}</div>
                                          <div class="notification-job-deadline">${notification.jobDeadline}</div>
                                          <div class="notification-job-description">${notification.jobDescription}</div>
                 <button class="delete-button" data-index=${index}>Delete</button>`;
                                          
            // add the notification to the container
            const notificationsContainer = document.querySelector(".notifications-container");
            notificationsContainer.appendChild(notificationNode);

            // Add event listener to the delete button
            const deleteButton = notificationNode.querySelector('.delete-button');
            deleteButton.addEventListener('click', (e) => {
                // remove the item from the data
                notifications.splice(e.target.dataset.index, 1);
                // update the local storage
                localStorage.setItem("notifications", JSON.stringify(notifications));
                // remove the node from the DOM
                notificationNode.remove();
            });
        });
    }
});



// function to add data to notifications container
function notify(button) {
    // check if button is already clicked
    if(button.classList.contains("clicked")) {
        alert("You have already notified for this job!");
        return;
    }

    // get the job id
    const jobId = button.id;

    // get the job container
    const jobContainer = button.closest(".job-listing");

    // get the job company, deadline and description
    const jobCompany = jobContainer.querySelector(".job-company").innerText;
    const jobDeadline = jobContainer.querySelector(".job-deadline").innerText;
    const jobDescription = jobContainer.querySelector(".job-description").innerText;

    // create the notification node
    const notificationNode = document.createElement("div");
    notificationNode.classList.add("notification");
    notificationNode.innerHTML = `<div class="notification-job-company">${jobCompany}</div>
                                  <div class="notification-job-deadline">${jobDeadline}</div>
                                  <div class="notification-job-description">${jobDescription}</div>`;

    // add the notification to the container
    const notificationsContainer = document.querySelector(".notifications-container");
    notificationsContainer.appendChild(notificationNode);

    // add the clicked class to the button
    button.classList.add("clicked");

    // store the data in Local Storage
    const storedData = getData("notifications") || [];
    storedData.push({ jobCompany, jobDeadline, jobDescription });
    storeData("notifications", storedData);
}

// call the displayData function when the page loads
displayData();
